# Primary configuration for the AI-powered automation framework
# This file controls all framework behavior and can be overridden via environment variables

# LLM Configuration - True Modular Provider System
llm_mode: "local"  # options: local, cloud, auto
model: "gemini"  # model name for local (Ollama) or cloud providers
api_key: null  # API key for cloud LLMs, will read from OPENAI_API_KEY env var if null
llm_retries: 2  # number of retry attempts for LLM calls
llm_timeout: 30  # timeout in seconds for LLM API calls
enable_visual_fallback: true  # enable screenshot-based LLM reasoning when selectors fail

# Dynamic LLM Provider Configuration
llm_providers:
  - name: "openai"
    type: "cloud"
    enabled: true
    priority: 1
    config:
      api_key: "${OPENAI_API_KEY}"
      model: "gpt-3.5-turbo"
      timeout: 30
      max_tokens: 2048
  - name: "gemini"
    type: "cloud"
    enabled: true
    priority: 2
    config:
      api_key: "${GEMINI_API_KEY}"
      model: "gemini-pro"
      timeout: 30
      max_tokens: 2048
  - name: "ollama"
    type: "local"
    enabled: true
    priority: 3
    config:
      host: "http://localhost:11434"
      model: "llama2"
      timeout: 60
      max_tokens: 4096

# LLM Framework Configuration
llm_framework:
  use_langchain: false  # enable LangChain/LangGraph for advanced chaining
  use_langgraph: false  # enable LangGraph for workflow orchestration
  memory_enabled: true  # enable conversation memory
  chain_type: "simple"  # options: simple, sequential, router
  temperature: 0.1  # LLM temperature for generation
  max_tokens: 2048  # maximum tokens for LLM responses

# RAGAS Configuration for Test Generation
ragas:
  enabled: true  # enable RAGAS-powered test generation
  model: "gpt-3.5-turbo"  # model for RAGAS operations
  max_test_cases: 50  # maximum test cases to generate per BRD
  include_negative: true  # generate negative test cases
  include_boundary: true  # generate boundary test cases
  swagger_integration: true  # enable Swagger/OpenAPI integration
  framework_integration: true  # enable actual RAGAS framework integration

# Database Configuration
database:
  url: "sqlite:///./test_sets.db"  # SQLite database for test cases and results
  sync_enabled: true  # enable Excelâ†”SQL bidirectional sync
  auto_backup: true  # enable automatic database backups
  backup_interval_hours: 24  # backup interval in hours
  real_time_sync: true  # enable real-time synchronization

# Allure Reporting
allure:
  results_dir: "reports/allure"  # directory for Allure report generation
  history_dir: "reports/allure/history"  # directory for historical reports
  export_formats: ["html", "pdf", "excel"]  # export formats for reports
  screenshots_enabled: true  # enable screenshot capture
  video_enabled: false  # enable video recording (experimental)

# Router Configuration (for test classification)
router:
  ui_keywords: ["click", "navigate", "button", "page", "browser", "field", "fill", "enter", "type", "select"]
  api_keywords: ["GET", "POST", "PUT", "DELETE", "endpoint", "url", "api", "request", "response"]
  mobile_keywords: ["tap", "swipe", "mobile", "android", "ios", "app", "device"]
  sql_keywords: ["insert", "update", "delete", "select", "verify", "table", "database", "query"]

# MCP Configuration
mcp:
  max_retries: 3  # retry attempts for MCP operations
  retry_interval_seconds: 2  # delay between retries
  self_healing_enabled: true  # enable self-healing for all MCPs
  vision_fallback_enabled: true  # enable vision-based fallback
  browser_use_enabled: false  # enable BrowserUse integration (experimental)
  ai_powered_recovery: true  # enable AI-powered recovery mechanisms

# UI Automation Settings
ui:
  browser: "chromium"  # browser type: chromium, firefox, webkit
  headless: true  # run browser in headless mode
  self_heal: true  # enable self-healing for failed selectors
  screenshot_on_failure: true  # capture screenshots on test failures
  video_recording: false  # enable video recording
  viewport: {"width": 1920, "height": 1080}  # browser viewport size
  wait_timeout: 30  # default wait timeout for UI elements

# API Testing Settings
api:
  base_urls:
    default: "https://httpbin.org"  # default base URL for API tests
    test: "https://jsonplaceholder.typicode.com"  # additional test API
  timeout: 30  # API request timeout in seconds
  retry_failed_requests: true  # retry failed API requests
  validate_schemas: true  # validate API responses against schemas
  swagger_integration: true  # enable Swagger/OpenAPI integration

# Mobile Testing Settings
mobile:
  server_url: "http://localhost:4723/wd/hub"  # Appium server URL
  platform_name: "Android"  # target platform
  device_name: "emulator-5554"  # device identifier
  app_path: "./apps/sample.apk"  # path to mobile app
  host: "localhost"  # Appium host
  port: 4723  # Appium port
  desired_capabilities:
    platformName: "Android"
    deviceName: "emulator"
    appPackage: ""
    appActivity: ""
  screenshot_on_failure: true  # capture screenshots on mobile test failures
  real_device_support: true  # enable real device testing
  simulator_support: true  # enable simulator testing

# Dashboard Configuration
dashboard:
  host: "0.0.0.0"  # dashboard host
  port: 8000  # dashboard port
  debug: false  # enable debug mode
  auto_reload: true  # enable auto-reload for development
  max_upload_size: 50  # maximum file upload size in MB
  session_timeout: 3600  # session timeout in seconds
  real_time_updates: true  # enable real-time updates
  live_execution_status: true  # show live execution status

# Versioning Configuration
versioning:
  similarity_threshold: 0.8  # threshold for duplicate detection
  method: "embedding"  # similarity method: sequence, embedding
  enable_versioning: true  # enable test case versioning
  auto_version: true  # automatically create versions on changes
  max_versions: 100  # maximum versions to keep per test case

# Wait Strategy
default_wait: "smart"  # wait strategy: smart, strict
wait_timeout: 30  # default wait timeout in seconds

# Repository Paths
wait_repo:
  path: "waits_repo/wait_repo.yaml"  # wait repository file

locator_repo:
  path: "locators_repo/locators.db"  # locator repository database

db:
  path: "data/test_db.sqlite"  # main database path

# Concurrency Settings
concurrency:
  enabled: false  # enable parallel test execution
  workers: 4  # number of worker threads
  max_workers: 4  # maximum worker threads
  queue_size: 100  # maximum queue size for test execution

# Security Configuration
security:
  secret_key: "changeme"  # JWT secret key (change in production)
  algorithm: "HS256"  # JWT algorithm
  access_token_expire_minutes: 60  # token expiration time
  users:
    - username: "admin"
      password_hash: "admin"  # plain text for demo, use bcrypt in production
      role: "admin"
    - username: "user"
      password_hash: "user"  # plain text for demo, use bcrypt in production
      role: "viewer"

# Alerting Configuration
alerts:
  slack_webhook_url: null  # Slack webhook for notifications
  email:
    smtp_server: null  # SMTP server for email alerts
    smtp_port: 587  # SMTP port
    sender: null  # sender email
    recipient: null  # recipient email
    username: null  # SMTP username
    password: null  # SMTP password

# OpenAI Configuration (for cloud LLM mode)
openai:
  api_key: null  # OpenAI API key
  model: "gpt-3.5-turbo"  # OpenAI model
  use_local: true  # prefer local models over cloud

# Gemini Configuration (for Google AI)
gemini:
  api_key: null  # Gemini API key
  model: "gemini-pro"  # Gemini model
  use_local: true  # prefer local models over cloud

# Ollama Configuration (for local LLM)
ollama:
  host: "http://localhost:11434"  # Ollama server host
  model: "llama2"  # default Ollama model
  timeout: 60  # Ollama request timeout

# Logging Configuration
logging:
  level: "INFO"  # logging level: DEBUG, INFO, WARNING, ERROR
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "logs/automation.log"  # log file path
  max_size: 10  # maximum log file size in MB
  backup_count: 5  # number of backup log files to keep

# Natural Language Processing Configuration
nlp:
  enable_advanced_parsing: true  # enable advanced LLM-powered parsing
  fallback_to_keywords: true  # fallback to keyword parsing if LLM fails
  context_awareness: true  # enable context-aware step parsing
  step_dependency_analysis: true  # analyze step dependencies automatically

# Test Case Generation Configuration
test_generation:
  enable_ragas_framework: true  # enable actual RAGAS framework integration
  enable_brd_processing: true  # enable BRD document processing
  enable_swagger_processing: true  # enable Swagger/OpenAPI processing
  enable_excel_processing: true  # enable Excel file processing
  categorization_enabled: true  # enable automatic test case categorization
  priority_assignment: true  # enable automatic priority assignment
  tag_generation: true  # enable automatic tag generation
  boundary_test_generation: true  # enable boundary test case generation
  negative_test_generation: true  # enable negative test case generation